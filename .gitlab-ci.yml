image: docker:24.0.7

variables:
  DOCKER_HOST: unix:///var/run/docker.sock
  DOCKER_TLS_CERTDIR: ""
  IMAGE_NAME: first_pipeline
  CONTAINER_NAME: flask_app

stages:
  - build
  - deploy

before_script:
  - apk add --no-cache docker-compose
  - docker --version
  - docker-compose --version

build_job:
  stage: build
  script:
    # Secure Docker Hub login with token
    - echo "$DOCKER_TOKEN" | docker login -u "ahmedheggy" --password-stdin
    
    # Build and push the image
    - docker build -t ahmedheggy/$IMAGE_NAME:$CI_COMMIT_SHA .
    - docker push ahmedheggy/$IMAGE_NAME:$CI_COMMIT_SHA
    
    # Also tag as 'latest' (optional)
    - docker tag ahmedheggy/$IMAGE_NAME:$CI_COMMIT_SHA ahmedheggy/$IMAGE_NAME:latest
    - docker push ahmedheggy/$IMAGE_NAME:latest
  tags:
    - docker

deploy:
  stage: deploy
  only:
    - main
  script:
    # Install required tools
    - apk add --no-cache bash coreutils curl
    
    # Docker Hub login
    - echo "$DOCKER_TOKEN" | docker login -u "ahmedheggy" --password-stdin
    
    # Pull and tag the image
    - docker pull ahmedheggy/first_pipeline:$CI_COMMIT_SHA
    - docker tag ahmedheggy/first_pipeline:$CI_COMMIT_SHA ahmedheggy/first_pipeline:latest
    
    # Clean up previous deployment
    - docker-compose down --remove-orphans --timeout 30 || true
    
    # Deploy with compose
    - TAG=$CI_COMMIT_SHA docker-compose up -d
    
    # Wait for services to be healthy with timeout
    - timeout 60 bash -c 'while ! docker-compose ps | grep -q "healthy"; do sleep 5; done'
    
    # Verify deployment
    - docker-compose ps
    - docker-compose logs --tail=50
    
    # Health check the web service
    - sleep 5  # Additional wait for web service
    - curl -f http://localhost:5000/health || (docker-compose logs web && exit 1)