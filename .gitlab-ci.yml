image: docker:24.0.7  # Use a specific version of Docker

services:
  - name: docker:24.0.7-dind  # Use Docker-in-Docker (DinD)
    command: ["--tls=false"]  # Ensure TLS is disabled for connection

variables:
  DOCKER_HOST: tcp://docker:2375  # Use 'docker' as the hostname (matches the service name)
  DOCKER_TLS_CERTDIR: ""  # Disable TLS to prevent authentication issues
  POSTGRES_DB: mydatabase
  POSTGRES_USER: user
  POSTGRES_PASSWORD: password
  REDIS_HOST: redis
  DATABASE_URL: postgresql://user:password@db:5432/mydatabase
  COMPOSE_HTTP_TIMEOUT: 300  # Avoid timeout issues

stages:
  - build
  - test

before_script:
  - apk add --no-cache docker-compose  # Install docker-compose
  - docker --version  # Verify Docker is installed
  - docker-compose --version  # Verify docker-compose is installed
  - docker info  # Debug Docker status

build_job:
  stage: build
  script:
    - echo "Waiting for Docker daemon to be ready..."
    - sleep 20  # Give Docker-in-Docker enough time to start
    - docker ps  # List running containers to check if Docker is available
    - echo "Building the app..."
    - docker-compose build  # Build the Docker image
  tags:
    - docker

test_job:
  stage: test
  script:
    - echo "Starting services..."
    - docker-compose up -d
    - sleep 10  # Wait for PostgreSQL and Redis
    - curl -f http://localhost:8000/ || (echo "App failed to start" && exit 1)
  tags:
    - docker
  after_script:
    - docker-compose down  # Clean up after the test
