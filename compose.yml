version: '3.8'

services:
  web:
    build: .
    container_name: flask_app
    ports:
      - "8000:5000"
    networks:
      - my_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    restart: always  # Ensures Flask restarts on failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 10s
      retries: 5
      start_period: 10s

  db:
    image: postgres:latest
    container_name: first_pipeline-db-1
    restart: always
    networks:
      - my_network
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:latest
    container_name: first_pipeline-redis-1
    restart: always
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5
      start_period: 10s

volumes:
  db_data:

networks:
  my_network:
